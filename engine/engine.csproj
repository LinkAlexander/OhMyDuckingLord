<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>
  
  <PropertyGroup>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  
  <PropertyGroup>
    <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsWindows)'=='true'">
    <DefineConstants>Windows</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsOSX)'=='true'">
    <DefineConstants>OSX</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsLinux)'=='true'">
    <DefineConstants>Linux</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="OpenTK" Version="4.8.1" />
    <PackageReference Include="SkiaSharp" Version="2.88.6" />
    <PackageReference Include="System.Drawing.Common" Version="7.0.0" />
  </ItemGroup>
  
  <ItemGroup>
    <None Include="cgimin\engine\material\ambientdiffusespecular\AmbientDiffuseSpecular_FS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\ambientdiffusespecular\AmbientDiffuseSpecular_VS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\ambientdiffuse\AmbientDiffuse_FS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\ambientdiffuse\AmbientDiffuse_VS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\reflectionmapping\ReflectionMapping_FS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\reflectionmapping\ReflectionMapping_VS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\simpletexture\Simple_FS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\simpletexture\Simple_VS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\wobble2\Wobble2_FS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="cgimin\engine\material\wobble2\Wobble2_VS.glsl">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties" />
  </ItemGroup>

  <PropertyGroup>
    <EnableDefaultItems>true</EnableDefaultItems>
  </PropertyGroup>

</Project>
